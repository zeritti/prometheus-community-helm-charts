
## Default values for prometheus-smartctl-exporter
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

fullnameOverride: ""

nameOverride: ""

config: {}
#  devices:
#  - /dev/sda

extraInstances: []
# - config:
#     devices:
#     - /dev/nvme0n1
#   nodeSelector:
#     type: other

common:
  config:
    bind_to: "0.0.0.0:9633"
    url_path: "/metrics"
    smartctl_location: /usr/sbin/smartctl
    collect_not_more_than_period: 120s

serviceMonitor:
  enabled: false
  # Specify namespace to load the monitor if not in the same namespace
  # namespace: prometheus-operator
  # Add Extra labels if needed. Prometeus operator may need them to find it.
  extraLabels: {}
  # release: prometheus-operator
  interval: 60s
  scrapeTimeout: 30s
  # Set relabel_configs as per https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  relabelings: []

image:
  repository: quay.io/prometheuscommunity/smartctl-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true
  podSecurityPolicy: unrestricted-psp

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

annotations: {}

nodeSelector: {}

tolerations:
  - effect: NoSchedule
    operator: Exists

affinity: {}

service:
  type: ClusterIP
  port: 80
  ipDualStack:
    enabled: false
    ipFamilies: ["IPv6", "IPv4"]
    ipFamilyPolicy: "PreferDualStack"

prometheusRules:
  enabled: false
  # Specify namespace to install the rules in
  namespace: ""
  # Add extra labels for prometheusRule for Prometheus operator's rule selector to find it
  extraLabels: {}
    # release: prometheus-operator
  # Additional labels to attach to each alert rule
  alertLabels: {}
  # Alert rules
  rules:
    SmartCTLDeviceMediaErrors:
      expr: 'smartctl_device_media_errors != 0'
      annotations:
        message: |
          Device {{ $labels.device }} on instance {{ $labels.instance }} has media errors
      for: 1m
      labels:
        severity: error
    SmartCTLDeviceCriticalWarning:
      expr: 'smartctl_device_critical_warning != 0'
      annotations:
        message: |
          Device {{ $labels.device }} on instance {{ $labels.instance }} has media errors
      for: 1m
      labels:
        severity: warning
    SmartCTLDeviceAvailableSpareUnderThreshold:
      expr: 'smartctl_device_available_spare_threshold > smartctl_device_available_spare'
      annotations:
        message: |
          Device {{ $labels.device }} on instance {{ $labels.instance }} is under available spare threshold.
      for: 1m
      labels:
        severity: warning
    SmartCTLDeviceStatus:
      expr: 'smartctl_device_status != 1'
      annotations:
        message: |
          Device {{ $labels.device }} on instance {{ $labels.instance }} has a bad status
      for: 1m
      labels:
        severity: error
    SmartCTLDInterfaceSlow:
      expr: 'smartctl_device_interface_speed{speed_type="current"} != on(device, instance, namespace, pod) smartctl_device_interface_speed{speed_type="max"}'
      annotations:
        message: |
          Device {{ $labels.device }} on instance {{ $labels.instance }} interface is slower then it should be
      for: 1m
      labels:
        severity: warning
    SmartCTLDDeviceTemperature:
      expr: 'smartctl_device_temperature{temperature_type="current"} > 60'
      annotations:
        message: |
          Device {{ $labels.device }} on instance {{ $labels.instance }} has temperature higher than 60Â°C
      for: 1m
      labels:
        severity: warning
